# Create cluster with Ingress
kind create cluster --config cluster.yaml --wait 120s

# Alternatively,
cat <<EOF | kind create cluster --config=-
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "ingress-ready=true"
  extraPortMappings:
  - containerPort: 80
    hostPort: 80
    protocol: TCP
  - containerPort: 443
    hostPort: 443
    protocol: TCP
EOF

# Install Ingress Nginx
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/kind/deploy.yaml

# Test using the Ingress
kubectl apply -f example.yaml

curl localhost/foo
curl localhost/bar
-------------

var hm = require('header-metadata');
var crypto = require('crypto');
var fs = require('fs');

// Define the alias for your private key
var keyAlias = 'myPrivateKey';

// Load the private key from the configured Crypto Key object
var privateKey = fs.readFileSync('cert:///' + keyAlias, 'ascii');

// Example data to be signed
var data = "This is some data to be signed";

// Create a signer object
var signer = crypto.createSign('SHA256');

// Update the signer with the data
signer.update(data);

// Sign the data using the private key
var signature = signer.sign(privateKey, 'base64');

// Set the signature in a response header
hm.response.set('X-Signature', signature);

// Send the response
session.output.write("Data signed successfully.");

